<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="6" passed="5" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-12-15T09:04:15 IST" name="Suite" finished-at="2024-12-15T09:04:16 IST" duration-ms="224">
    <groups>
      <group name="Smoke">
        <method signature="ManualLogin.homeLogin()[pri:0, instance:Test.ManualLogin@183ec003]" name="homeLogin" class="Test.ManualLogin"/>
      </group> <!-- Smoke -->
    </groups>
    <test started-at="2024-12-15T09:04:15 IST" name="Test" finished-at="2024-12-15T09:04:16 IST" duration-ms="85">
      <class name="Test.day1">
        <test-method is-config="true" signature="before()[pri:0, instance:Test.day1@8f2ef19]" started-at="2024-12-15T09:04:15 IST" name="before" finished-at="2024-12-15T09:04:15 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- before -->
        <test-method signature="demo()[pri:0, instance:Test.day1@8f2ef19]" started-at="2024-12-15T09:04:15 IST" name="demo" finished-at="2024-12-15T09:04:15 IST" duration-ms="27" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertTrue(Assert.java:57)
at org.testng.Assert.assertTrue(Assert.java:67)
at Test.day1.demo(day1.java:11)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:228)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:961)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:201)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:819)
at org.testng.TestRunner.run(TestRunner.java:619)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:481)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:58)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
at java.base/java.lang.Thread.run(Thread.java:833)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- demo -->
      </class> <!-- Test.day1 -->
      <class name="Test.day2">
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:Test.day2@76b1e9b8]" started-at="2024-12-15T09:04:16 IST" name="beforeClass" finished-at="2024-12-15T09:04:16 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method signature="demo()[pri:0, instance:Test.day2@76b1e9b8]" started-at="2024-12-15T09:04:16 IST" name="demo" finished-at="2024-12-15T09:04:16 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- demo -->
        <test-method is-config="true" signature="afterClass()[pri:0, instance:Test.day2@76b1e9b8]" started-at="2024-12-15T09:04:16 IST" name="afterClass" finished-at="2024-12-15T09:04:16 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method is-config="true" signature="after()[pri:0, instance:Test.day2@76b1e9b8]" started-at="2024-12-15T09:04:16 IST" name="after" finished-at="2024-12-15T09:04:16 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- after -->
      </class> <!-- Test.day2 -->
    </test> <!-- Test -->
    <test started-at="2024-12-15T09:04:15 IST" name="Automate" finished-at="2024-12-15T09:04:15 IST" duration-ms="72">
      <class name="Test.MobileLogin">
        <test-method signature="carLogin()[pri:0, instance:Test.MobileLogin@5524cca1]" started-at="2024-12-15T09:04:15 IST" name="carLogin" finished-at="2024-12-15T09:04:15 IST" duration-ms="10" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- carLogin -->
      </class> <!-- Test.MobileLogin -->
      <class name="Test.RemoteLogin">
        <test-method signature="carLogin()[pri:0, instance:Test.RemoteLogin@5032714f]" started-at="2024-12-15T09:04:15 IST" name="carLogin" finished-at="2024-12-15T09:04:15 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- carLogin -->
        <test-method signature="homeLogin()[pri:0, instance:Test.RemoteLogin@5032714f]" started-at="2024-12-15T09:04:15 IST" name="homeLogin" finished-at="2024-12-15T09:04:15 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- homeLogin -->
      </class> <!-- Test.RemoteLogin -->
    </test> <!-- Automate -->
    <test started-at="2024-12-15T09:04:16 IST" name="Manual" finished-at="2024-12-15T09:04:16 IST" duration-ms="13">
      <class name="Test.ManualLogin">
        <test-method is-config="true" signature="beforeSuite()[pri:0, instance:Test.ManualLogin@183ec003]" started-at="2024-12-15T09:04:15 IST" name="beforeSuite" finished-at="2024-12-15T09:04:15 IST" duration-ms="17" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method is-config="true" signature="beforeClass()[pri:0, instance:Test.ManualLogin@183ec003]" started-at="2024-12-15T09:04:16 IST" name="beforeClass" finished-at="2024-12-15T09:04:16 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:Test.ManualLogin@183ec003]" started-at="2024-12-15T09:04:16 IST" name="beforeMethod" finished-at="2024-12-15T09:04:16 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="homeLogin()[pri:0, instance:Test.ManualLogin@183ec003]" started-at="2024-12-15T09:04:16 IST" name="homeLogin" finished-at="2024-12-15T09:04:16 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- homeLogin -->
        <test-method is-config="true" signature="afterMethod()[pri:0, instance:Test.ManualLogin@183ec003]" started-at="2024-12-15T09:04:16 IST" name="afterMethod" finished-at="2024-12-15T09:04:16 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:Test.ManualLogin@183ec003]" started-at="2024-12-15T09:04:16 IST" name="afterSuite" finished-at="2024-12-15T09:04:16 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- Test.ManualLogin -->
    </test> <!-- Manual -->
  </suite> <!-- Suite -->
</testng-results>
